【单例模式】

单例设计模式是全局中只有一个该类型对象。该对象可能包括常用的工具，或者玩家数据，这种设计模确保处理相同的行为，不用大量的new重复对象，使用同一个对象就行。或者保存一些玩家数据时，我们要确保每次改动的都是同一个数据，我们也可以使用单例模式。

单例的具体实现有：饿汉单例和懒汉单例；

“饿汉单例”是在对象一初始化时声明一个静态变量，来声明一个单例对象。

“懒汉单例”是先声明一个静态变量而不去做new操作，之后可以通过调用静态方法来get一个单例。开始时，会做判断静态变量是否指向一个对象，如果没有则new一个变量，之后return该静态变量。

饿汉单例和懒汉单例的区别，在于饿汉单例一开始就会生成一个对象，而懒汉单例只有在调用时才会生成，不去调用就一直不会生成。

需要注意的是，无论饿汉还是懒汉，我们都需要private私有化构造函数，确保对象不能被new操作。